plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.11.0'
}

group = 'de.platon42'
version = '0.3'
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenCentral()
}

/*
  To run tests in IntelliJ use these VM Options for run configuration 
  -ea -Didea.system.path=build/idea-sandbox/system-test -Didea.config.path=build/idea-sandbox/config-test -Didea.plugins.path=build/idea-sandbox/plugins-test
 */

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.assertj:assertj-core:3.20.2"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0-M1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0-M1'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect"
//    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

intellij {
    setVersion("2021.1.3") // LATEST-EAP-SNAPSHOT
    setUpdateSinceUntilBuild(false)
//    setPlugins(["com.intellij.java"])
}

runPluginVerifier {
    ideVersions = ["IC-193.5662.53", "IC-211.7628.21", // 2019.3.1 - 2021.1.3
                   "CL-193.5233.103", "CL-193.7288.25", // 2019.3
                   "CL-201.6668.126", "CL-201.8743.17", // 2020.1
                   "CL-202.6397.106", "CL-202.8194.17", // 2020.2
                   "CL-203.5981.166", "CL-203.8084.11", // 2020.3
                   "CL-211.6693.114", "CL-211.7628.27"] // 2021.1
    downloadDir = System.getProperty("user.home") + "/.gradle/caches/modules-2/files-2.1/com.jetbrains.intellij.idea"
}

patchPluginXml {
    setChangeNotes("""
  <h4>V0.3 (28-Jul-21)</h4>
    <ul>
      <li>Enhancement: Macro contents are no longer parsed, added syntax highlighting options for macros.
      <li>Enhancement: Macro definitions are now word and stub indexed, macro calls reference to definition.
      <li>Enhancement: Macro definition refactoring and find usages support.
      <li>Enhancement: Structural View also shows macro definitions. 
      <li>Bugfix: Missing REPT and ENDR assembler directives added.
      <li>Cosmetics: Changed or added some icons at various places.
      <li>Performance: Reference search for global labels and symbols now uses stub index.
      <li>Compatibility: Restored compatibility with IDE versions < 2021.1.
      <li>Performance: Optimized lexer.
    </ul>
  <h4>V0.2 (27-Jul-21)</h4>
    <ul>
      <li>Cosmetics: Added (same) icon for plugin as for file type.
      <li>Performance: Use Word-Index for global labels and symbols instead of iterating over the file.
      <li>Performance: Use Stub-Index for global labels and symbols.
      <li>Bugfix: No longer reports a syntax error when file lacks terminating End-Of-Line.
      <li>Enhancement: Registers are now offered for code completion, making editing less annoying. 
    </ul>
  <p>Full changelog available at <a href="https://github.com/chrisly42/mc68000-asm-plugin#changelog">Github project site</a>.</p>
""")
}

sourceSets.main.java.srcDirs('src/main/gen', 'src/main/java')

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        csv.required.set(false)
    }
}

publishPlugin {
    setToken(intellijPublishToken)
}