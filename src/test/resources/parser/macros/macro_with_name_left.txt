Assembly File: a.asm
  PsiWhiteSpace('\n')
  M68kMacroDefinitionImpl(MACRO_DEFINITION)
    M68kMacroNameDefinitionImpl(MACRO_NAME_DEFINITION)
      PsiElement(M68kTokenType.MACRO_NAME)('FOOBAR')
    PsiWhiteSpace(' ')
    PsiElement(M68kTokenType.MACRO_TAG)('MACRO')
    PsiWhiteSpace(' ')
    PsiComment(M68kTokenType.COMMENT)('; start of macro')
    PsiWhiteSpace('\n')
    M68kMacroPlainLineImpl(MACRO_PLAIN_LINE)
      PsiElement(M68kTokenType.MACRO_LINE)('.loop\@ move.l \1,(\2)+  ')
    PsiComment(M68kTokenType.COMMENT)('; just copy all the stuff')
    PsiWhiteSpace('\n')
    M68kMacroPlainLineImpl(MACRO_PLAIN_LINE)
      PsiElement(M68kTokenType.MACRO_LINE)('        dbra \3,.loop\@')
    PsiWhiteSpace('\n')
    PsiElement(M68kTokenType.MACRO_END_TAG)('        ENDM ')
  PsiComment(M68kTokenType.COMMENT)('; end of macro')
  PsiElement(M68kTokenType.EOL)('\n')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('        ')
  M68kStatementImpl(STATEMENT)
    M68kAsmInstructionImpl(ASM_INSTRUCTION)
      M68kAsmOpImpl(ASM_OP)
        PsiElement(M68kTokenType.MNEMONIC)('move')
        M68kOperandSizeImpl(OPERAND_SIZE)
          PsiElement(M68kTokenType.OPSIZE_W)('.w')
      PsiWhiteSpace('  ')
      M68kDataRegisterDirectAddressingModeImpl(DATA_REGISTER_DIRECT_ADDRESSING_MODE)
        M68kDataRegisterImpl(DATA_REGISTER)
          PsiElement(M68kTokenType.DREG)('d0')
      PsiElement(M68kTokenType.SEPARATOR)(',')
      M68kDataRegisterDirectAddressingModeImpl(DATA_REGISTER_DIRECT_ADDRESSING_MODE)
        M68kDataRegisterImpl(DATA_REGISTER)
          PsiElement(M68kTokenType.DREG)('d1')
  PsiElement(M68kTokenType.EOL)('\n')